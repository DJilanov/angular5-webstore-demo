{
"/Users/d.jilanov/westernacher/src/app/services/caching.service.ts":{"path":"/Users/d.jilanov/westernacher/src/app/services/caching.service.ts","statementMap":{"0":{"start":{"line":2,"column":13},"end":{"line":2,"column":37}},"1":{"start":{"line":3,"column":29},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":32},"end":{"line":4,"column":66}},"3":{"start":{"line":5,"column":22},"end":{"line":119,"column":3}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":24}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":53}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":117}},"8":{"start":{"line":10,"column":75},"end":{"line":10,"column":113}},"9":{"start":{"line":11,"column":8},"end":{"line":11,"column":63}},"10":{"start":{"line":13,"column":8},"end":{"line":13,"column":34}},"11":{"start":{"line":19,"column":4},"end":{"line":24,"column":6}},"12":{"start":{"line":20,"column":8},"end":{"line":22,"column":11}},"13":{"start":{"line":21,"column":12},"end":{"line":21,"column":48}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":68}},"15":{"start":{"line":29,"column":4},"end":{"line":37,"column":6}},"16":{"start":{"line":30,"column":8},"end":{"line":35,"column":11}},"17":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"18":{"start":{"line":32,"column":16},"end":{"line":32,"column":39}},"19":{"start":{"line":34,"column":12},"end":{"line":34,"column":24}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":68}},"21":{"start":{"line":42,"column":4},"end":{"line":45,"column":6}},"22":{"start":{"line":43,"column":8},"end":{"line":43,"column":45}},"23":{"start":{"line":44,"column":8},"end":{"line":44,"column":68}},"24":{"start":{"line":50,"column":4},"end":{"line":57,"column":6}},"25":{"start":{"line":51,"column":19},"end":{"line":51,"column":21}},"26":{"start":{"line":52,"column":8},"end":{"line":56,"column":9}},"27":{"start":{"line":53,"column":12},"end":{"line":55,"column":13}},"28":{"start":{"line":54,"column":16},"end":{"line":54,"column":51}},"29":{"start":{"line":62,"column":4},"end":{"line":65,"column":6}},"30":{"start":{"line":64,"column":8},"end":{"line":64,"column":53}},"31":{"start":{"line":70,"column":4},"end":{"line":74,"column":6}},"32":{"start":{"line":72,"column":8},"end":{"line":72,"column":31}},"33":{"start":{"line":73,"column":8},"end":{"line":73,"column":31}},"34":{"start":{"line":78,"column":4},"end":{"line":82,"column":6}},"35":{"start":{"line":81,"column":8},"end":{"line":81,"column":30}},"36":{"start":{"line":87,"column":4},"end":{"line":98,"column":6}},"37":{"start":{"line":88,"column":20},"end":{"line":88,"column":22}},"38":{"start":{"line":90,"column":8},"end":{"line":90,"column":58}},"39":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"40":{"start":{"line":93,"column":12},"end":{"line":93,"column":23}},"41":{"start":{"line":95,"column":8},"end":{"line":95,"column":25}},"42":{"start":{"line":97,"column":8},"end":{"line":97,"column":61}},"43":{"start":{"line":102,"column":4},"end":{"line":106,"column":6}},"44":{"start":{"line":103,"column":20},"end":{"line":103,"column":22}},"45":{"start":{"line":104,"column":8},"end":{"line":104,"column":58}},"46":{"start":{"line":105,"column":8},"end":{"line":105,"column":21}},"47":{"start":{"line":110,"column":4},"end":{"line":112,"column":6}},"48":{"start":{"line":111,"column":8},"end":{"line":111,"column":44}},"49":{"start":{"line":113,"column":4},"end":{"line":116,"column":23}},"50":{"start":{"line":117,"column":4},"end":{"line":117,"column":26}},"51":{"start":{"line":120,"column":0},"end":{"line":120,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":22},"end":{"line":5,"column":23}},"loc":{"start":{"line":5,"column":34},"end":{"line":119,"column":1}}},"1":{"name":"CachingService","decl":{"start":{"line":6,"column":13},"end":{"line":6,"column":27}},"loc":{"start":{"line":6,"column":69},"end":{"line":14,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":54},"end":{"line":10,"column":55}},"loc":{"start":{"line":10,"column":73},"end":{"line":10,"column":115}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":46},"end":{"line":19,"column":47}},"loc":{"start":{"line":19,"column":66},"end":{"line":24,"column":5}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":20,"column":47},"end":{"line":20,"column":48}},"loc":{"start":{"line":20,"column":63},"end":{"line":22,"column":9}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":46},"end":{"line":29,"column":47}},"loc":{"start":{"line":29,"column":68},"end":{"line":37,"column":5}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":30,"column":44},"end":{"line":30,"column":45}},"loc":{"start":{"line":30,"column":60},"end":{"line":35,"column":9}}},"7":{"name":"(anonymous_7)","decl":{"start":{"line":42,"column":42},"end":{"line":42,"column":43}},"loc":{"start":{"line":42,"column":64},"end":{"line":45,"column":5}}},"8":{"name":"(anonymous_8)","decl":{"start":{"line":50,"column":44},"end":{"line":50,"column":45}},"loc":{"start":{"line":50,"column":58},"end":{"line":57,"column":5}}},"9":{"name":"(anonymous_9)","decl":{"start":{"line":62,"column":42},"end":{"line":62,"column":43}},"loc":{"start":{"line":62,"column":59},"end":{"line":65,"column":5}}},"10":{"name":"(anonymous_10)","decl":{"start":{"line":70,"column":47},"end":{"line":70,"column":48}},"loc":{"start":{"line":70,"column":64},"end":{"line":74,"column":5}}},"11":{"name":"(anonymous_11)","decl":{"start":{"line":78,"column":44},"end":{"line":78,"column":45}},"loc":{"start":{"line":78,"column":56},"end":{"line":82,"column":5}}},"12":{"name":"(anonymous_12)","decl":{"start":{"line":87,"column":49},"end":{"line":87,"column":50}},"loc":{"start":{"line":87,"column":65},"end":{"line":98,"column":5}}},"13":{"name":"(anonymous_13)","decl":{"start":{"line":102,"column":48},"end":{"line":102,"column":49}},"loc":{"start":{"line":102,"column":60},"end":{"line":106,"column":5}}},"14":{"name":"(anonymous_14)","decl":{"start":{"line":110,"column":50},"end":{"line":110,"column":51}},"loc":{"start":{"line":110,"column":62},"end":{"line":112,"column":5}}}},"branchMap":{"0":{"loc":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},{"start":{"line":31,"column":12},"end":{"line":33,"column":13}}]},"1":{"loc":{"start":{"line":53,"column":12},"end":{"line":55,"column":13}},"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":55,"column":13}},{"start":{"line":53,"column":12},"end":{"line":55,"column":13}}]},"2":{"loc":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},{"start":{"line":92,"column":8},"end":{"line":94,"column":9}}]},"3":{"loc":{"start":{"line":115,"column":41},"end":{"line":115,"column":197}},"type":"binary-expr","locations":[{"start":{"line":115,"column":42},"end":{"line":115,"column":180}},{"start":{"line":115,"column":184},"end":{"line":115,"column":186}},{"start":{"line":115,"column":191},"end":{"line":115,"column":197}}]},"4":{"loc":{"start":{"line":115,"column":55},"end":{"line":115,"column":164}},"type":"binary-expr","locations":[{"start":{"line":115,"column":55},"end":{"line":115,"column":119}},{"start":{"line":115,"column":123},"end":{"line":115,"column":164}}]},"5":{"loc":{"start":{"line":115,"column":199},"end":{"line":115,"column":363}},"type":"binary-expr","locations":[{"start":{"line":115,"column":200},"end":{"line":115,"column":346}},{"start":{"line":115,"column":350},"end":{"line":115,"column":352}},{"start":{"line":115,"column":357},"end":{"line":115,"column":363}}]},"6":{"loc":{"start":{"line":115,"column":213},"end":{"line":115,"column":330}},"type":"binary-expr","locations":[{"start":{"line":115,"column":213},"end":{"line":115,"column":281}},{"start":{"line":115,"column":285},"end":{"line":115,"column":330}}]}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":1,"32":0,"33":0,"34":1,"35":1,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":1,"48":1,"49":1,"50":1,"51":1},"f":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[1,1,0],"4":[1,1],"5":[1,1,0],"6":[1,1]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"bdf8259de59dc2d6a46bc9a4f37a68bfc90be838","l":{"2":1,"3":1,"4":1,"5":1,"7":1,"8":1,"9":1,"10":1,"11":1,"13":1,"19":1,"20":0,"21":0,"23":0,"29":1,"30":0,"31":0,"32":0,"34":0,"36":0,"42":1,"43":0,"44":0,"50":1,"51":0,"52":0,"53":0,"54":0,"62":1,"64":0,"70":1,"72":0,"73":0,"78":1,"81":1,"87":1,"88":0,"90":0,"92":0,"93":0,"95":0,"97":0,"102":1,"103":0,"104":0,"105":0,"110":1,"111":1,"113":1,"117":1,"120":1},"code":["import { Injectable, EventEmitter } from '@angular/core';","import { EventEmiterService } from './event.emiter.service';","import { User } from '../interfaces/user.interface';","import { LocalStorageService } from 'angular-2-local-storage';","","import { Config } from '../config';","","@Injectable()","","/**"," * @CachingService used to cache the data to have offline mode"," */","export class CachingService {","    // TODO: cache the users in the front-end localstorage","    private usersList;","","    /**","    * @removeUserByID: remove user from the array based on its ID","    * @response:<Object> Contins the expected user that must be removed from the list","    */","    public removeUserByID(response) {","        this.usersList = this.usersList.filter(function(user) {","            return user.id !== response.user.id;","        });","        this.eventEmiterService.emitUserListUpdates(this.usersList);","    }","","    /**","    * @updateUserByID: update user from the array based on its ID","    * @parameters:<Object> Contins the expected user that must be updated on the list","    */","    public updateUserByID(parameters) {","        this.usersList = this.usersList.map(function(user) {","            if(user.id === parameters.user.id) {","                return parameters.user;","            } ","            return user;","        });","        this.eventEmiterService.emitUserListUpdates(this.usersList);","    }","","    /**","    * @createUser: add new user to the current array","    * @parameters:<Object> Contins the expected user that must be added to the list","    */","    public createUser(parameters) {","        this.usersList.push(parameters.user);","        this.eventEmiterService.emitUserListUpdates(this.usersList);","    }","","    /**","    * @findUserByID: finds user from the array based on its ID","    * @id:<String> the id that we use to search in the array","    */","    private findUserByID(id:string) {","        let user = {};","        for(let userCounter = 0; userCounter < this.usersList.length; userCounter++) {","            if(this.usersList[userCounter].id == id) {","                return this.usersList[userCounter];","            }","        }","    }","","    /**","    * @cacheUsers: saves the changes over the users array in the localstorage","    * @users:<Users[]> Contins the expected array with the changed users","    */","    private cacheUsers(users) {","        // save them to the local storage","        this.localStorageService.set('users', users);","    }","","    /**","    * @updateUsersList: updated the user list based on the recieved one","    * @users:<User[]> Contins the users array","    */","    private updateUsersList(users) {","        // todo validate them","        this.usersList = users;","        this.cacheUsers(users);","    }","","    /**","    * @getUsersList: returns the users array","    */","    public getUsersList() {","        // use localstorage users if the back-end doesnt respond. The error handler has to call the cache service in case ","        // of problem and it must emit event to the main that we have the cachied copies and warn the user!","        return this.usersList;","    }","","    /**","    * @addRequestToQuery: add more user changes to the query","    * @data:<Object> Contins the expected user that must be changed when we get online","    */","    public addRequestToQuery(data) {","        let query = [];","        // Parse the serialized data back into an aray of objects","        query = JSON.parse(localStorage.getItem('query'));","        // Push the new data (whether it be an object or anything else) onto the array","        if(query == null) {","            query = [];","        }","        query.push(data);","        // Re-serialize the array back into a string and store it in localStorage","        localStorage.setItem('query', JSON.stringify(query));","    }","","    /**","    * @getQueryRequests: returns the users changes that are waiting","    */","    public getQueryRequests() {","        let query = [];","        query = JSON.parse(localStorage.getItem('query'));","        return query;","    }","","    /**","    * @clearQueryRequests: clears the query from the old requests","    */","    public clearQueryRequests() {","        localStorage.setItem('query', '[]');","    }","","    constructor(","        private eventEmiterService: EventEmiterService,","        private localStorageService: LocalStorageService","    ) {","        this.eventEmiterService.dataFetched.subscribe(options => this.updateUsersList(options));","        this.usersList = this.localStorageService.get('users');","        // we empty the old query","        this.clearQueryRequests();","    }","}",""]},
"/Users/d.jilanov/westernacher/src/app/services/event.emiter.service.ts":{"path":"/Users/d.jilanov/westernacher/src/app/services/event.emiter.service.ts","statementMap":{"0":{"start":{"line":2,"column":13},"end":{"line":2,"column":37}},"1":{"start":{"line":3,"column":26},"end":{"line":66,"column":3}},"2":{"start":{"line":5,"column":8},"end":{"line":5,"column":52}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":55}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":55}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":56}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":57}},"9":{"start":{"line":17,"column":4},"end":{"line":19,"column":6}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":35}},"11":{"start":{"line":24,"column":4},"end":{"line":26,"column":6}},"12":{"start":{"line":25,"column":8},"end":{"line":25,"column":40}},"13":{"start":{"line":31,"column":4},"end":{"line":33,"column":6}},"14":{"start":{"line":32,"column":8},"end":{"line":32,"column":36}},"15":{"start":{"line":37,"column":4},"end":{"line":39,"column":6}},"16":{"start":{"line":38,"column":8},"end":{"line":38,"column":34}},"17":{"start":{"line":44,"column":4},"end":{"line":46,"column":6}},"18":{"start":{"line":45,"column":8},"end":{"line":45,"column":38}},"19":{"start":{"line":51,"column":4},"end":{"line":53,"column":6}},"20":{"start":{"line":52,"column":8},"end":{"line":52,"column":38}},"21":{"start":{"line":58,"column":4},"end":{"line":60,"column":6}},"22":{"start":{"line":59,"column":8},"end":{"line":59,"column":39}},"23":{"start":{"line":61,"column":4},"end":{"line":64,"column":27}},"24":{"start":{"line":65,"column":4},"end":{"line":65,"column":30}},"25":{"start":{"line":67,"column":0},"end":{"line":67,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":26},"end":{"line":3,"column":27}},"loc":{"start":{"line":3,"column":38},"end":{"line":66,"column":1}}},"1":{"name":"EventEmiterService","decl":{"start":{"line":4,"column":13},"end":{"line":4,"column":31}},"loc":{"start":{"line":4,"column":34},"end":{"line":12,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":50},"end":{"line":17,"column":51}},"loc":{"start":{"line":17,"column":66},"end":{"line":19,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":55},"end":{"line":24,"column":56}},"loc":{"start":{"line":24,"column":71},"end":{"line":26,"column":5}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":31,"column":51},"end":{"line":31,"column":52}},"loc":{"start":{"line":31,"column":67},"end":{"line":33,"column":5}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":37,"column":53},"end":{"line":37,"column":54}},"loc":{"start":{"line":37,"column":65},"end":{"line":39,"column":5}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":44,"column":53},"end":{"line":44,"column":54}},"loc":{"start":{"line":44,"column":69},"end":{"line":46,"column":5}}},"7":{"name":"(anonymous_7)","decl":{"start":{"line":51,"column":53},"end":{"line":51,"column":54}},"loc":{"start":{"line":51,"column":69},"end":{"line":53,"column":5}}},"8":{"name":"(anonymous_8)","decl":{"start":{"line":58,"column":54},"end":{"line":58,"column":55}},"loc":{"start":{"line":58,"column":70},"end":{"line":60,"column":5}}}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":1,"22":0,"23":1,"24":1,"25":1},"f":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"54e7e123d6d6d858ab0296b6327b500242722412","l":{"2":1,"3":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"17":1,"18":0,"24":1,"25":0,"31":1,"32":0,"37":1,"38":0,"44":1,"45":0,"51":1,"52":0,"58":1,"59":0,"61":1,"65":1,"67":1},"code":["import { Injectable, EventEmitter } from '@angular/core';","","import { Config } from '../config';","","@Injectable()","","/**"," * @DriverService used on all connections to the back-end for the drivers"," */","export class EventEmiterService {","","    public updateUser: EventEmitter<any>;","    public dataFetched: EventEmitter<any>;","    public showUserModal: EventEmitter<any>;","    public hideUserModal: EventEmitter<any>;","    public workingOnline: EventEmitter<any>;","    public workingOffline: EventEmitter<any>;","    public userListUpdates: EventEmitter<any>;","","    /**","    * @emitUpdateUser emit with information about updated user","    * @data {Object} data to emit","    */","    public emitUpdateUser(data):void {","        this.updateUser.emit(data);","    }","","    /**","    * @emitUserListUpdates emit with information about updated userlist","    * @data {Object} data to emit","    */","    public emitUserListUpdates(data):void {","        this.userListUpdates.emit(data);","    }","","    /**","    * @emitFetchedData emit with information about fetched user data","    * @data {Object} data to emit","    */","    public emitFetchedData(data):void {","        this.dataFetched.emit(data);","    }","","    /**","    * @hideUserModal emit to show the user modal","    */","    public emitHideUserModal():void {","        this.hideUserModal.emit();","    }","","    /**","    * @emitShowUserModal emit with information about the modal that we have to show","    * @data {Object} data to emit","    */","    public emitShowUserModal(data):void {","        this.showUserModal.emit(data);","    }","","    /**","    * @emitWorkingOnline emit that server become online","    * @data {Object} data to emit","    */","    public emitWorkingOnline(data):void {","        this.workingOnline.emit(data);","    }","","    /**","    * @emitWorkingOffline emit that server become offline","    * @data {Object} data to emit","    */","    public emitWorkingOffline(data):void {","        this.workingOffline.emit(data);","    }","","    constructor() {","        this.updateUser = new EventEmitter();","        this.dataFetched = new EventEmitter();","        this.showUserModal = new EventEmitter();","        this.hideUserModal = new EventEmitter();","        this.workingOnline = new EventEmitter();","        this.workingOffline = new EventEmitter();","        this.userListUpdates = new EventEmitter();","    }","}",""]}}
